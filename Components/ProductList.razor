@using Microsoft.AspNetCore.Components.Web
@using myWebApp.Models
@using myWebApp.Services
@inject JsonFileProductService ProductService
@* Added in ASP.NET Core 101 [10 of 13] (https://youtu.be/R23v4lgHYQI?t=199) *@
<div class="card-columns">
    @foreach (var product in ProductService.GetProducts())
    {
        <div class="card">
            <div class="card-img" style="background-image: url('@product.Image');"></div>
            <div class="card-body">
                <h5 class="card-title">@product.Title</h5>
            </div>
        </div>
        <div class="card-footer">
            <small class="text-muted">
                <button @onclick="(e => SelectProduct(product.Id))"
                        data-toggle="modal" data-target="#productModal" class="btn btn-primary">
                    More Info
                </button>
            </small>
        </div>
    }
</div>

<link rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

@*Added in ASP.NET Core 101 [11 of 13] (https://youtu.be/wA-3FA2kbpA?t=226)*@
<div class="modal fade" id="productModal" tabindex="-1" role="dialog" aria-labelledby="productTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        @if (selectedProduct != null)
        {
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="productTitle">@selectedProduct.Title</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="card">
                        <div class="card-img" style="background-image: url('@selectedProduct.Image');">
                        </div>
                        <div class="card-body">
                            <p class="card-text">@selectedProduct.Description</p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @if (voteCount == 0)
                    {
                        <span>Be the first to vote!</span>
                    }
                    else
                    {
                        <span>@voteCount @voteLabel </span>
                    }
                    @for (int i = 1; i < 6; i++)
                    {
                        var currentStar = i;
                        if (i <= currentRating)
                        {
                            <span class="fa fa-star checked" @onclick="(e => SubmitRating(currentStar))"></span>
                        }
                        else
                        {
                            <span class="fa fa-star" @onclick="(e => SubmitRating(currentStar))"></span>
                        }
                    }
                    @if (voteCount > 0)
                    {
                        <span>(@voteAverage)</span>
                    }

                </div>
            </div>
        }
    </div>
</div>


@*Added in ASP.NET Core 101 [10 of 13] (https://youtu.be/R23v4lgHYQI?t=489)*@
@code {
    Product selectedProduct;
    string selectProductId;

    void SelectProduct(string productId)
    {
        selectProductId = productId;
        selectedProduct = ProductService.GetProducts().First(x => x.Id == productId);
        GetCurrentRating();
    }

    // Below added in ASP.NET Core 101 [12 of 13] (https://youtu.be/IhoDDZBW6dc?t=56)
    decimal currentRating = 0;
    decimal voteCount = 0;
    string voteLabel;
    string voteAverage;

    void GetCurrentRating()
    {

        if (selectedProduct.Ratings == null)
        {
            currentRating = 0;
            voteCount = 0;
        }
        else
        {
            voteCount = selectedProduct.Ratings.Count();
            voteLabel = voteCount > 1 ? "Votes" : "Vote";
            currentRating = selectedProduct.Ratings.Sum() / voteCount;
            var decAvg = Math.Round(currentRating, 1);
            voteAverage = string.Format("{0:0.#}", decAvg);
        }

        System.Console.WriteLine($"Current rating: {selectedProduct.Id}: {currentRating}");
    }

    void SubmitRating(int rating)
    {
        System.Console.WriteLine($"Rating received for {selectedProduct.Id}: {rating}");
        ProductService.AddRating(selectProductId, rating);
        SelectProduct(selectProductId);
    }

}
